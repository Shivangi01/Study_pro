# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.define "host" do |host|
    host.vm.box = "centos/7"
    host.vm.hostname = 'host'
    #host.vm.network "public_network", ip: "192.168.56.101"
    host.vm.network "private_network", ip: "192.168.100.101"
    #host.vm.network "private_network", type: "dhcp"
     host.vm.provision "shell", inline: <<-SHELL
        yum install epel-release -y;
        yum install ansible -y ;
        yum install git -y;
        yum install net-tools -y;
	sudo service network restart
        SHELL

  end
  
  config.vm.define "host1" do |host1|
    host1.vm.box = "centos/7"
    host1.vm.network "private_network", ip: "192.168.100.102"
    #host1.vm.network "public_network", ip: "192.168.56.102"
    #host1.vm.network "private_network", type: "dhcp"
    host1.vm.hostname = 'host1'
    host1.vm.provision "shell", inline: <<-SHELL
    yum install net-tools -y;
    sudo service network restart
    SHELL
  end
  
  config.vm.provision "shell", inline: <<-SHELL
    useradd ansible;
    echo "%ansible ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/ansible
    useradd narendrai;
    echo "%narendrai ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/narendrai
    mkdir -p /home/ansible/.ssh/;
    chown ansible:ansible /home/ansible/.ssh;
    cp /vagrant/authorized_keys /home/ansible/.ssh;
    chown ansible:ansible /home/ansible/.ssh/authorized_keys;

    mkdir -p /home/narendrai/.ssh/
    chown narendrai:narendrai /home/narendrai/.ssh
    cp /vagrant/authorized_keys /home/narendrai/.ssh/
    chown narendrai:narendrai /home/narendrai/.ssh/authorized_keys
    sudo service network restart
    cp /vagrant/environment /etc/
  SHELL

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision "shell", inline: <<-SHELL
  #	yum install epel-release -y;
  #	yum install ansible -y ;
  #      yum install git -y;
  #	SHELL
#Vagrant.configure("2") do |config|
#  config.vm.hostname = 'host1'
#end
end
